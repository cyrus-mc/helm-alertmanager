# Default values for archiva
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

#Namespace: monitoring

Image:
  PullPolicy: "Always"
  #PullSecret: ".."
 
ConfigReload:

  # ConfigMap reload container image
  Image:
    Name: "jimmidyson/configmap-reload"
    Tag: "v0.1"

    # resources and request limits
    # Ref: http://kubernetes.io/docs/user-guide/compute-resources
    Resources: {}

AlertManager:

  # extra arguments to provide to alertmanager (key=value)
  ExtraArgs: {}

  # Alertmanager server container image
  Image:
    Name: "prom/alertmanager"
    Tag: "v0.6.2"

  # Persistence settings
  Persistence:
    Enabled: false

    AccessMode: "ReadWriteOnce"
    StorageClass: "standard"
    Size: "2Gi"

  Port:
    Container: 9093
    Service: 80

  Service:
    Type: "ClusterIP"

  # currently will only work with value of 1 due to single PVC
  Replicas: 1

  # resources and request limits
  # Ref: http://kubernetes.io/docs/user-guide/compute-resources
  Resources: {}
  # limits:
  #   cpu: 10m
  #   memory: 32Mi
  # requests:
  #   cpu: 10m
  #   memory: 32Mi

  # Alertmanager server pod termination grace period
  # smtp_smarthost: smarsh-com.mail.protection.outlook.com 

  TerminationGracePeriodSeconds: 300

Configuration:

  alertmanager.yml: |-
      global:
	smtp_smarthost: 'smarsh-com.mail.protection.outlook.com'
	smtp_from: 'X-Prom-Alerts@smarsh.com'
	smtp_auth_username: 'X-Prom-Alerts'
	smtp_auth_password: 'BlastedFalcon1'
	# The auth token for Hipchat.
	#hipchat_auth_token: '1234556789'
	# Alternative host for Hipchat.
	#hipchat_url: 'https://hipchat.foobar.org/'
	#slack_api_url: '<slack_webhook_url>'

	# do not set tls for now
      receivers:
      - name: default-receiver
	email_configs:
	- to: 'X-Prom-Alerts'
	require_tls: false

      route:
	group_by: ['alertname', 'cluster', 'service', 'instance' ]
	group_wait: 10s
	group_interval: 5m
	receiver: default-receiver
	repeat_interval: 3h

#  this should fix the instance messages in the description
#  it must be done inside def for slack, pager duty
#      route:
#        group_by: ['alertname', 'cluster', 'service', 'instance']
#      
#      receivers:
#      - name: 'slack-op-notifications'
#        slack_configs: 
#        - send_resolved: true
#          api_url: xxx
#          channel: '#xxx'
#          text: '{{ .CommonAnnotations.summary }}, {{ .CommonAnnotations.description }}'

